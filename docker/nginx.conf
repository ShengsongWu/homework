#got this from some example
pid /tmp/nginx.pid;
daemon off;
error_log /dev/stdout info;
error_log /var/log/nginx/error.log info;

worker_processes auto;

events {
  worker_connections 2048;
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  log_format time_combined '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '$request_time $upstream_response_time $pipe';

  log_format json_combined escape=json
  '{'
    '"tags": "nginx",'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"remote_user":"$remote_user",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent"'
    '}';


  include /etc/nginx/mime.types;
  access_log /dev/stdout json_combined;
  access_log /var/log/nginx/access.log;
  access_log /var/log/nginx/access-timed.log time_combined;
  sendfile on;

  server {
    listen 80 deferred default_server;
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name _;

    location ~ ^/api {
      # Allows cors
      proxy_hide_header X-Frame-Options;
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Headers *;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # enable this if and only if you use HTTPS
      # proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://localhost:8000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    location / {
        root /frontend/build;
        index index.html;
    }
  }
}
